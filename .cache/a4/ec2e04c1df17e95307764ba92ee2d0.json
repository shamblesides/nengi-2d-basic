{"id":"5Wbt","dependencies":[{"name":"C:\\Users\\benne\\np\\nengi-2d-basic\\node_modules\\resource-loader\\lib\\b64.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\benne\\np\\nengi-2d-basic\\package.json","includedInParent":true,"mtime":1557038832290},{"name":"C:\\Users\\benne\\np\\nengi-2d-basic\\node_modules\\resource-loader\\package.json","includedInParent":true,"mtime":1557035510541}],"generated":{"js":"\"use strict\";exports.__esModule=!0,exports.encodeBinary=r;var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";function r(r){for(var t=\"\",o=0;o<r.length;){for(var n=[0,0,0],a=[0,0,0,0],l=0;l<n.length;++l)o<r.length?n[l]=255&r.charCodeAt(o++):n[l]=0;switch(a[0]=n[0]>>2,a[1]=(3&n[0])<<4|n[1]>>4,a[2]=(15&n[1])<<2|n[2]>>6,a[3]=63&n[2],o-(r.length-1)){case 2:a[3]=64,a[2]=64;break;case 1:a[3]=64}for(var s=0;s<a.length;++s)t+=e.charAt(a[s])}return t}\"undefined\"!=typeof module&&(module.exports.default=r);"},"sourceMaps":{"js":{"mappings":[{"source":"../src/b64.js","name":"encodeBinary","original":{"line":9,"column":16},"generated":{"line":1,"column":43}},{"source":"../src/b64.js","name":"encodeBinary","original":{"line":9,"column":16},"generated":{"line":1,"column":56}},{"source":"../src/b64.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":58}},{"source":"../src/b64.js","name":"_keyStr","original":{"line":1,"column":6},"generated":{"line":1,"column":62}},{"source":"../src/b64.js","name":null,"original":{"line":1,"column":16},"generated":{"line":1,"column":64}},{"source":"../src/b64.js","name":null,"original":{"line":9,"column":7},"generated":{"line":1,"column":132}},{"source":"../src/b64.js","name":"encodeBinary","original":{"line":9,"column":16},"generated":{"line":1,"column":141}},{"source":"../src/b64.js","name":"input","original":{"line":9,"column":29},"generated":{"line":1,"column":143}},{"source":"../src/b64.js","name":null,"original":{"line":13,"column":4},"generated":{"line":1,"column":146}},{"source":"../src/b64.js","name":null,"original":{"line":10,"column":4},"generated":{"line":1,"column":150}},{"source":"../src/b64.js","name":"output","original":{"line":10,"column":8},"generated":{"line":1,"column":154}},{"source":"../src/b64.js","name":null,"original":{"line":10,"column":17},"generated":{"line":1,"column":156}},{"source":"../src/b64.js","name":"inx","original":{"line":11,"column":8},"generated":{"line":1,"column":159}},{"source":"../src/b64.js","name":null,"original":{"line":11,"column":14},"generated":{"line":1,"column":161}},{"source":"../src/b64.js","name":"inx","original":{"line":13,"column":11},"generated":{"line":1,"column":163}},{"source":"../src/b64.js","name":"input","original":{"line":13,"column":17},"generated":{"line":1,"column":165}},{"source":"../src/b64.js","name":"length","original":{"line":13,"column":23},"generated":{"line":1,"column":167}},{"source":"../src/b64.js","name":null,"original":{"line":13,"column":31},"generated":{"line":1,"column":175}},{"source":"../src/b64.js","name":null,"original":{"line":18,"column":8},"generated":{"line":1,"column":176}},{"source":"../src/b64.js","name":null,"original":{"line":15,"column":8},"generated":{"line":1,"column":180}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":15,"column":14},"generated":{"line":1,"column":184}},{"source":"../src/b64.js","name":null,"original":{"line":15,"column":27},"generated":{"line":1,"column":186}},{"source":"../src/b64.js","name":null,"original":{"line":15,"column":28},"generated":{"line":1,"column":187}},{"source":"../src/b64.js","name":null,"original":{"line":15,"column":31},"generated":{"line":1,"column":189}},{"source":"../src/b64.js","name":null,"original":{"line":15,"column":34},"generated":{"line":1,"column":191}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":16,"column":14},"generated":{"line":1,"column":194}},{"source":"../src/b64.js","name":null,"original":{"line":16,"column":35},"generated":{"line":1,"column":196}},{"source":"../src/b64.js","name":null,"original":{"line":16,"column":36},"generated":{"line":1,"column":197}},{"source":"../src/b64.js","name":null,"original":{"line":16,"column":39},"generated":{"line":1,"column":199}},{"source":"../src/b64.js","name":null,"original":{"line":16,"column":42},"generated":{"line":1,"column":201}},{"source":"../src/b64.js","name":null,"original":{"line":16,"column":45},"generated":{"line":1,"column":203}},{"source":"../src/b64.js","name":"jnx","original":{"line":18,"column":17},"generated":{"line":1,"column":206}},{"source":"../src/b64.js","name":null,"original":{"line":18,"column":23},"generated":{"line":1,"column":208}},{"source":"../src/b64.js","name":"jnx","original":{"line":18,"column":26},"generated":{"line":1,"column":210}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":18,"column":32},"generated":{"line":1,"column":212}},{"source":"../src/b64.js","name":"length","original":{"line":18,"column":43},"generated":{"line":1,"column":214}},{"source":"../src/b64.js","name":"jnx","original":{"line":18,"column":53},"generated":{"line":1,"column":223}},{"source":"../src/b64.js","name":"inx","original":{"line":19,"column":16},"generated":{"line":1,"column":225}},{"source":"../src/b64.js","name":"input","original":{"line":19,"column":22},"generated":{"line":1,"column":227}},{"source":"../src/b64.js","name":"length","original":{"line":19,"column":28},"generated":{"line":1,"column":229}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":22,"column":16},"generated":{"line":1,"column":236}},{"source":"../src/b64.js","name":"jnx","original":{"line":22,"column":27},"generated":{"line":1,"column":238}},{"source":"../src/b64.js","name":null,"original":{"line":22,"column":60},"generated":{"line":1,"column":241}},{"source":"../src/b64.js","name":"input","original":{"line":22,"column":34},"generated":{"line":1,"column":245}},{"source":"../src/b64.js","name":"charCodeAt","original":{"line":22,"column":40},"generated":{"line":1,"column":247}},{"source":"../src/b64.js","name":"inx","original":{"line":22,"column":51},"generated":{"line":1,"column":258}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":25,"column":16},"generated":{"line":1,"column":263}},{"source":"../src/b64.js","name":"jnx","original":{"line":25,"column":27},"generated":{"line":1,"column":265}},{"source":"../src/b64.js","name":null,"original":{"line":25,"column":34},"generated":{"line":1,"column":268}},{"source":"../src/b64.js","name":null,"original":{"line":45,"column":8},"generated":{"line":1,"column":270}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":31,"column":8},"generated":{"line":1,"column":277}},{"source":"../src/b64.js","name":null,"original":{"line":31,"column":27},"generated":{"line":1,"column":279}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":31,"column":32},"generated":{"line":1,"column":282}},{"source":"../src/b64.js","name":null,"original":{"line":31,"column":43},"generated":{"line":1,"column":284}},{"source":"../src/b64.js","name":null,"original":{"line":31,"column":49},"generated":{"line":1,"column":288}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":34,"column":8},"generated":{"line":1,"column":290}},{"source":"../src/b64.js","name":null,"original":{"line":34,"column":27},"generated":{"line":1,"column":292}},{"source":"../src/b64.js","name":null,"original":{"line":34,"column":50},"generated":{"line":1,"column":296}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":34,"column":34},"generated":{"line":1,"column":298}},{"source":"../src/b64.js","name":null,"original":{"line":34,"column":45},"generated":{"line":1,"column":300}},{"source":"../src/b64.js","name":null,"original":{"line":34,"column":58},"generated":{"line":1,"column":305}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":34,"column":64},"generated":{"line":1,"column":307}},{"source":"../src/b64.js","name":null,"original":{"line":34,"column":75},"generated":{"line":1,"column":309}},{"source":"../src/b64.js","name":null,"original":{"line":34,"column":81},"generated":{"line":1,"column":313}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":37,"column":8},"generated":{"line":1,"column":315}},{"source":"../src/b64.js","name":null,"original":{"line":37,"column":27},"generated":{"line":1,"column":317}},{"source":"../src/b64.js","name":null,"original":{"line":37,"column":50},"generated":{"line":1,"column":321}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":37,"column":34},"generated":{"line":1,"column":324}},{"source":"../src/b64.js","name":null,"original":{"line":37,"column":45},"generated":{"line":1,"column":326}},{"source":"../src/b64.js","name":null,"original":{"line":37,"column":59},"generated":{"line":1,"column":331}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":37,"column":65},"generated":{"line":1,"column":333}},{"source":"../src/b64.js","name":null,"original":{"line":37,"column":76},"generated":{"line":1,"column":335}},{"source":"../src/b64.js","name":null,"original":{"line":37,"column":82},"generated":{"line":1,"column":339}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":40,"column":8},"generated":{"line":1,"column":341}},{"source":"../src/b64.js","name":null,"original":{"line":40,"column":27},"generated":{"line":1,"column":343}},{"source":"../src/b64.js","name":null,"original":{"line":40,"column":48},"generated":{"line":1,"column":346}},{"source":"../src/b64.js","name":"bytebuffer","original":{"line":40,"column":32},"generated":{"line":1,"column":349}},{"source":"../src/b64.js","name":null,"original":{"line":40,"column":43},"generated":{"line":1,"column":351}},{"source":"../src/b64.js","name":"inx","original":{"line":43,"column":29},"generated":{"line":1,"column":354}},{"source":"../src/b64.js","name":"input","original":{"line":43,"column":36},"generated":{"line":1,"column":357}},{"source":"../src/b64.js","name":"length","original":{"line":43,"column":42},"generated":{"line":1,"column":359}},{"source":"../src/b64.js","name":null,"original":{"line":43,"column":51},"generated":{"line":1,"column":366}},{"source":"../src/b64.js","name":null,"original":{"line":46,"column":12},"generated":{"line":1,"column":370}},{"source":"../src/b64.js","name":null,"original":{"line":46,"column":17},"generated":{"line":1,"column":375}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":48,"column":16},"generated":{"line":1,"column":377}},{"source":"../src/b64.js","name":null,"original":{"line":48,"column":35},"generated":{"line":1,"column":379}},{"source":"../src/b64.js","name":null,"original":{"line":48,"column":40},"generated":{"line":1,"column":382}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":49,"column":16},"generated":{"line":1,"column":385}},{"source":"../src/b64.js","name":null,"original":{"line":49,"column":35},"generated":{"line":1,"column":387}},{"source":"../src/b64.js","name":null,"original":{"line":49,"column":40},"generated":{"line":1,"column":390}},{"source":"../src/b64.js","name":null,"original":{"line":50,"column":16},"generated":{"line":1,"column":393}},{"source":"../src/b64.js","name":null,"original":{"line":52,"column":12},"generated":{"line":1,"column":399}},{"source":"../src/b64.js","name":null,"original":{"line":52,"column":17},"generated":{"line":1,"column":404}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":54,"column":16},"generated":{"line":1,"column":406}},{"source":"../src/b64.js","name":null,"original":{"line":54,"column":35},"generated":{"line":1,"column":408}},{"source":"../src/b64.js","name":null,"original":{"line":54,"column":40},"generated":{"line":1,"column":411}},{"source":"../src/b64.js","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":414}},{"source":"../src/b64.js","name":null,"original":{"line":63,"column":13},"generated":{"line":1,"column":418}},{"source":"../src/b64.js","name":"jnx","original":{"line":63,"column":17},"generated":{"line":1,"column":422}},{"source":"../src/b64.js","name":null,"original":{"line":63,"column":23},"generated":{"line":1,"column":424}},{"source":"../src/b64.js","name":"jnx","original":{"line":63,"column":26},"generated":{"line":1,"column":426}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":63,"column":32},"generated":{"line":1,"column":428}},{"source":"../src/b64.js","name":"length","original":{"line":63,"column":51},"generated":{"line":1,"column":430}},{"source":"../src/b64.js","name":"jnx","original":{"line":63,"column":61},"generated":{"line":1,"column":439}},{"source":"../src/b64.js","name":"output","original":{"line":64,"column":12},"generated":{"line":1,"column":441}},{"source":"../src/b64.js","name":"_keyStr","original":{"line":64,"column":22},"generated":{"line":1,"column":444}},{"source":"../src/b64.js","name":"charAt","original":{"line":64,"column":30},"generated":{"line":1,"column":446}},{"source":"../src/b64.js","name":"encodedCharIndexes","original":{"line":64,"column":37},"generated":{"line":1,"column":453}},{"source":"../src/b64.js","name":"jnx","original":{"line":64,"column":56},"generated":{"line":1,"column":455}},{"source":"../src/b64.js","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":459}},{"source":"../src/b64.js","name":"output","original":{"line":68,"column":11},"generated":{"line":1,"column":466}},{"source":"../src/b64.js","name":null,"original":{"line":72,"column":22},"generated":{"line":1,"column":468}},{"source":"../src/b64.js","name":"module","original":{"line":72,"column":11},"generated":{"line":1,"column":488}},{"source":"../src/b64.js","name":"module","original":{"line":73,"column":4},"generated":{"line":1,"column":497}},{"source":"../src/b64.js","name":"exports","original":{"line":73,"column":11},"generated":{"line":1,"column":504}},{"source":"../src/b64.js","name":"default","original":{"line":73,"column":19},"generated":{"line":1,"column":512}},{"source":"../src/b64.js","name":"encodeBinary","original":{"line":73,"column":29},"generated":{"line":1,"column":520}}],"sources":{"../src/b64.js":"const _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n/**\n * Encodes binary into base64.\n *\n * @param {string} input The input data to encode.\n * @returns {string} The encoded base64 string\n */\nexport function encodeBinary(input) {\n    let output = '';\n    let inx = 0;\n\n    while (inx < input.length) {\n        // Fill byte buffer array\n        const bytebuffer = [0, 0, 0];\n        const encodedCharIndexes = [0, 0, 0, 0];\n\n        for (let jnx = 0; jnx < bytebuffer.length; ++jnx) {\n            if (inx < input.length) {\n                // throw away high-order byte, as documented at:\n                // https://developer.mozilla.org/En/Using_XMLHttpRequest#Handling_binary_data\n                bytebuffer[jnx] = input.charCodeAt(inx++) & 0xff;\n            }\n            else {\n                bytebuffer[jnx] = 0;\n            }\n        }\n\n        // Get each encoded character, 6 bits at a time\n        // index 1: first 6 bits\n        encodedCharIndexes[0] = bytebuffer[0] >> 2;\n\n        // index 2: second 6 bits (2 least significant bits from input byte 1 + 4 most significant bits from byte 2)\n        encodedCharIndexes[1] = ((bytebuffer[0] & 0x3) << 4) | (bytebuffer[1] >> 4);\n\n        // index 3: third 6 bits (4 least significant bits from input byte 2 + 2 most significant bits from byte 3)\n        encodedCharIndexes[2] = ((bytebuffer[1] & 0x0f) << 2) | (bytebuffer[2] >> 6);\n\n        // index 3: forth 6 bits (6 least significant bits from input byte 3)\n        encodedCharIndexes[3] = bytebuffer[2] & 0x3f;\n\n        // Determine whether padding happened, and adjust accordingly\n        const paddingBytes = inx - (input.length - 1);\n\n        switch (paddingBytes) {\n            case 2:\n                // Set last 2 characters to padding char\n                encodedCharIndexes[3] = 64;\n                encodedCharIndexes[2] = 64;\n                break;\n\n            case 1:\n                // Set last character to padding char\n                encodedCharIndexes[3] = 64;\n                break;\n\n            default:\n                break; // No padding - proceed\n        }\n\n        // Now we will grab each appropriate character out of our keystring\n        // based on our index array and append it to the output string\n        for (let jnx = 0; jnx < encodedCharIndexes.length; ++jnx) {\n            output += _keyStr.charAt(encodedCharIndexes[jnx]);\n        }\n    }\n\n    return output;\n}\n\n// Backwards compat\nif (typeof module !== 'undefined') {\n    module.exports.default = encodeBinary; // eslint-disable-line no-undef\n}\n"},"lineCount":null}},"error":null,"hash":"9e1be82f4acaff8a4dba14c811fa6267","cacheData":{"env":{}}}