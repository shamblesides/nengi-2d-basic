{"id":"../node_modules/nengi/core/binary/types/Boolean.js","dependencies":[{"name":"C:\\Users\\benne\\np\\nengi-2d-basic\\package.json","includedInParent":true,"mtime":1557038832290},{"name":"C:\\Users\\benne\\np\\nengi-2d-basic\\node_modules\\nengi\\package.json","includedInParent":true,"mtime":1556703465689}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\r\n* Definition of a Boolean\r\n* size is 1 bit\r\n* uses BitBuffer functions for write/read\r\n* should never be interpolated (what is halfway between true and false? so esoteric)\r\n*/\nvar bool = {\n  'bits': 1,\n  'write': 'writeBoolean',\n  'read': 'readBoolean' //'interp': 'never'\n\n};\n\nbool.boundsCheck = function (value) {\n  return typeof value === 'boolean';\n};\n\nbool.compare = function (a, b) {\n  return {\n    a: a,\n    b: b,\n    isChanged: a !== b\n  };\n};\n\nvar _default = bool;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":0}},{"name":"bool","generated":{"line":14,"column":4},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":4}},{"generated":{"line":14,"column":8},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":8}},{"generated":{"line":14,"column":11},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":11}},{"generated":{"line":15,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":8,"column":4}},{"generated":{"line":15,"column":10},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":8,"column":12}},{"generated":{"line":15,"column":11},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":11}},{"generated":{"line":16,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":9,"column":4}},{"generated":{"line":16,"column":11},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":9,"column":13}},{"generated":{"line":16,"column":25},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":11}},{"generated":{"line":17,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":10,"column":4}},{"generated":{"line":17,"column":10},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":10,"column":12}},{"generated":{"line":17,"column":23},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":11}},{"generated":{"line":17,"column":24},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":11,"column":4}},{"generated":{"line":19,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":11}},{"generated":{"line":19,"column":1},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":7,"column":0}},{"name":"bool","generated":{"line":21,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":4},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":4}},{"name":"boundsCheck","generated":{"line":21,"column":5},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":5}},{"generated":{"line":21,"column":16},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":19},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":19}},{"name":"value","generated":{"line":21,"column":29},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":28}},{"generated":{"line":21,"column":34},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":19}},{"generated":{"line":21,"column":36},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":35}},{"generated":{"line":22,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":15,"column":1}},{"generated":{"line":22,"column":9},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":15,"column":9}},{"name":"value","generated":{"line":22,"column":16},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":15,"column":16}},{"generated":{"line":22,"column":21},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":15,"column":9}},{"generated":{"line":22,"column":26},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":15,"column":26}},{"generated":{"line":22,"column":35},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":15,"column":1}},{"generated":{"line":23,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":16,"column":1}},{"generated":{"line":23,"column":1},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":14,"column":0}},{"name":"bool","generated":{"line":25,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":4},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":4}},{"name":"compare","generated":{"line":25,"column":5},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":5}},{"generated":{"line":25,"column":12},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":15},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":15}},{"name":"a","generated":{"line":25,"column":25},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":24}},{"generated":{"line":25,"column":26},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":15}},{"name":"b","generated":{"line":25,"column":28},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":27}},{"generated":{"line":25,"column":29},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":15}},{"generated":{"line":25,"column":31},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":30}},{"generated":{"line":26,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":19,"column":4}},{"generated":{"line":26,"column":9},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":19,"column":11}},{"name":"a","generated":{"line":27,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":20,"column":8}},{"name":"a","generated":{"line":27,"column":4},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":20,"column":8}},{"generated":{"line":27,"column":5},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":20,"column":9}},{"name":"a","generated":{"line":27,"column":7},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":20,"column":11}},{"generated":{"line":27,"column":8},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":19,"column":11}},{"name":"b","generated":{"line":28,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":21,"column":8}},{"name":"b","generated":{"line":28,"column":4},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":21,"column":8}},{"generated":{"line":28,"column":5},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":21,"column":9}},{"name":"b","generated":{"line":28,"column":7},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":21,"column":11}},{"generated":{"line":28,"column":8},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":19,"column":11}},{"name":"isChanged","generated":{"line":29,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":22,"column":8}},{"name":"isChanged","generated":{"line":29,"column":4},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":22,"column":8}},{"generated":{"line":29,"column":13},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":22,"column":17}},{"name":"a","generated":{"line":29,"column":15},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":22,"column":19}},{"generated":{"line":29,"column":16},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":22,"column":20}},{"name":"b","generated":{"line":29,"column":21},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":22,"column":25}},{"generated":{"line":30,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":19,"column":11}},{"generated":{"line":30,"column":3},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":19,"column":4}},{"generated":{"line":31,"column":0},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":24,"column":1}},{"generated":{"line":31,"column":1},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":18,"column":0}},{"name":"bool","generated":{"line":33,"column":15},"source":"../node_modules/nengi/core/binary/types/Boolean.js","original":{"line":26,"column":15}}],"sources":{"../node_modules/nengi/core/binary/types/Boolean.js":"/**\r\n* Definition of a Boolean\r\n* size is 1 bit\r\n* uses BitBuffer functions for write/read\r\n* should never be interpolated (what is halfway between true and false? so esoteric)\r\n*/\r\nvar bool = {\r\n    'bits': 1,\r\n    'write': 'writeBoolean',\r\n    'read': 'readBoolean'\r\n    //'interp': 'never'\r\n}\r\n\r\nbool.boundsCheck = function(value) {\r\n\treturn (typeof value === 'boolean')\r\n}\r\n\r\nbool.compare = function(a, b) {\r\n    return {\r\n        a: a,\r\n        b: b,\r\n        isChanged: a !== b\r\n    }\r\n}\r\n\r\nexport default bool;"},"lineCount":null}},"error":null,"hash":"77753d00f81da27aded3ce0df67562df","cacheData":{"env":{}}}